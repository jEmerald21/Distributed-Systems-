// setting the protobuf version to be used
syntax = "proto3";

// importing some standard data types from google
import "google/protobuf/timestamp.proto";

// setting some java specific options
option java_package = "grpc.Joanna.PatientDataService";
option java_multiple_files = true;
option java_outer_classname = "PatientDataServiceImpl";

//import "SharedMessages.proto";

////////////////////////////////////////////////////////////////////////////////////
// The greeter service definition. Defining it's remote methods
service PatientDataService {
	rpc AddPrescription (Prescription) returns (RequestResult) {}
	rpc GetPrescriptions (GetPrescriptionInfo) returns (stream Prescription) {}
	rpc AddLabResults (stream LabResult) returns (RequestResult) {}
	rpc AddDoctorNotes(DoctorNote) returns (RequestResult) {}
}

////////////////////////////////////////////////////////////////////////////////////
// define the data structures

// single prescriptions for a patient
message Prescription {
	string doctorID = 1;
	string patientID = 2;
	google.protobuf.Timestamp date = 3;
	string prescriptionText = 4;
}

// // lab result
 message LabResult {
 	string doctorID = 1;
 	string patientID = 2;
 	google.protobuf.Timestamp date = 3;
 	string labType = 4;
 	string results = 5;
 	string diagnosis = 6;
 }

// // parameters needed to retrieve prescription
 message GetPrescriptionInfo {
 	string patientID = 1;
 }

// // doctor note data
 message DoctorNote {
 	string doctorID = 1;
 	string patientID = 2;
 	google.protobuf.Timestamp date = 3;
 	string diagnosis = 4;
 	string recommendations = 5;
 	string notes = 6;
 }

 message RequestResult {
	bool success = 1;
	// if 'success' is false, then this field may contain additional information
	string nonSuccessHint = 2;
}